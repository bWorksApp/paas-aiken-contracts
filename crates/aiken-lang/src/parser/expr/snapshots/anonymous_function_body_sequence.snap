---
source: crates/aiken-lang/src/parser/expr/anonymous_function.rs
description: "Code:\n\nfn (a: Int) -> Int {\n    let b = 1\n    a + b\n}"
---
Fn {
    location: 0..46,
    fn_style: Plain,
    arguments: [
        Arg {
            arg_name: Named {
                name: "a",
                label: "a",
                location: 4..5,
                is_validator_param: false,
            },
            location: 4..10,
            annotation: Some(
                Constructor {
                    location: 7..10,
                    module: None,
                    name: "Int",
                    arguments: [],
                },
            ),
            doc: None,
            tipo: (),
        },
    ],
    body: Sequence {
        location: 39..44,
        expressions: [
            Assignment {
                location: 25..34,
                value: UInt {
                    location: 33..34,
                    value: "1",
                    base: Decimal {
                        numeric_underscore: false,
                    },
                },
                patterns: [
                    AssignmentPattern {
                        pattern: Var {
                            location: 29..30,
                            name: "b",
                        },
                        annotation: None,
                        location: 29..30,
                    },
                ],
                kind: Let {
                    backpassing: false,
                },
            },
            BinOp {
                location: 39..44,
                name: AddInt,
                left: Var {
                    location: 39..40,
                    name: "a",
                },
                right: Var {
                    location: 43..44,
                    name: "b",
                },
            },
        ],
    },
    return_annotation: Some(
        Constructor {
            location: 15..18,
            module: None,
            name: "Int",
            arguments: [],
        },
    ),
}
